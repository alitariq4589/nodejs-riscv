name: Create Release from Artifact

on:
  workflow_run:
    workflows: ["Build Nodejs for RISC-V"]
    types:
      - completed

jobs:
  create-release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "nodejs-27-riscv64-linux.tar.gz"
            })[0];
            
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/context.zip`, Buffer.from(download.data));
            
      - name: Get workflow outputs (tag, release, asset name)
        id: get-outputs
        run: |
          response=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/jobs)
          TAG_NAME=$(echo "$response" | jq -r '.jobs[0].outputs.tag_name')
          RELEASE_NAME=$(echo "$response" | jq -r '.jobs[0].outputs.release_name')
          ASSET_NAME=$(echo "$response" | jq -r '.jobs[0].outputs.asset_name')
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "release_name=$RELEASE_NAME" >> $GITHUB_OUTPUT
          echo "asset_name=$ASSET_NAME" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Download artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: ${{ steps.get-outputs.outputs.asset_name }}
      #     run-id: ${{ github.event.workflow_run.id }}
      #     github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.get-outputs.outputs.tag_name }}
          git push origin ${{ steps.get-outputs.outputs.tag_name }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get-outputs.outputs.tag_name }}
          name: ${{ steps.get-outputs.outputs.release_name }}
          files: ./release-assets/*
